---
# kubectl -n dbs exec -it $(kubectl -n dbs get pods -l app.kubernetes.io/component=pgpool,app.kubernetes.io/name=postgresql-ha -o jsonpath='{.items[0].metadata.name}') -- cat /opt/bitnami/pgpool/conf/pool_passwd
# kubectl -n dbs create secret generic keycloak-poolusers --from-literal=usernames=security-pg-keycloak --from-literal=passwords=$(kubectl get secret keycloak-postgresql -o jsonpath='{.data.db-password}' | base64 -d)
apiVersion: kinda.rocks/v1beta1
kind: Database
metadata:
  name: pg-keycloak
spec:
  instance: "pg-instance" # must match with DbInstance name
  deletionProtected: false # Protection to not delete database when custom resource is deleted
  backup:
    enable: false
    cron: "0 0 * * *"
  # secret in which the credentials for the database should be stored (same namespace)
  secretName: keycloak-postgresql
  # the content of the secret
  credentials:
    templates:
      - name: db-password
        template: "{{ .Password }}"
        secret: true
      - name: CONNECTION_STRING
        template: "{{ .Protocol }}://{{ .UserName }}:{{ .Password }}@{{ .DatabaseHost }}:{{ .DatabasePort }}/{{ .DatabaseName }}"
        secret: true
      - name: DB_PASS
        template: "{{ .Password }}"
        secret: true
      - name: DB_USER
        template: "{{ .UserName }}"
        secret: true
      - name: DB_HOST
        template: "{{ .DatabaseHost }}"
        secret: true
      - name: DB_PORT
        template: "{{ .DatabasePort }}"
        secret: true
      - name: DB_NAME
        template: "{{ .DatabaseName }}"
        secret: true
      - name: DB_TYPE
        template: "{{ .Protocol }}"
        secret: true

  # secretsTemplates:
  #   db-password: "{{ .Password }}"
  #   # https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
  #   CONNECTION_STRING: "{{ .Protocol }}://{{ .UserName }}:{{ .Password }}@{{ .DatabaseHost }}:{{ .DatabasePort }}/{{ .DatabaseName }}"
  #   DB_PASS: "{{ .Password }}"
  #   DB_USER: "{{ .UserName }}"
  #   DB_HOST: "{{ .DatabaseHost }}"
  #   DB_PORT: "{{ .DatabasePort }}"
  #   DB_NAME: "{{ .DatabaseName }}"
  #   DB_TYPE: "{{ .Protocol }}"
