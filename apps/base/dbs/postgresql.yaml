---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: postgresql-ha
spec:
  releaseName: postgresql
  chart:
    spec:
      chart: postgresql-ha
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bitnami
  interval: 50m
  install:
    remediation:
      retries: 3
  values:
    pgpool:
      adminPassword: mypw
      customUsersSecret: poolusers
      # kubectl -n dbs create secret generic poolusers --from-literal=usernames=security-pg-keycloak,log4ham-pg-log4ham --from-literal=passwords=mypw
      # kubectl -n dbs rollout restart deployment postgresql-postgresql-ha-pgpool
    postgresql:
      # kubectl -n dbs create secret generic pg-access --from-literal=postgres-password=mypw --from-literal=password=mypw --from-literal=repmgr-password=reppw --from-literal=user=postgres --from-literal=pgadmin=pgadminpw
      existingSecret: pg-access
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        labels:
          release: prometheus-stack
    # TODO: Consider if it is safe to use longhorn-single for primaryReplicas as not clear how longhorn manages data locality
    # primaryReplicas:
    #   persistence:
    #     storageClass: longhorn-single

  # values:
  #   auth:
  #     username: myuser
  #     database: mydb
  #     existingSecret: pg-access
  #     secretKeys:
  #       adminPasswordKey: admin
  #       userPasswordKey: user
  #       replicationPasswordKey: replication
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pgadmin4
spec:
  releaseName: pgadmin
  timeout: 10m
  install:
    remediation:
      retries: 3
  chart:
    spec:
      chart: pgadmin4
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: runix
  interval: 50m
  values:
    persistentVolume:
      size: 4Gi
      storageClass: longhorn-single
    existingSecret: pg-access
    secretKeys:
      pgadminPasswordKey: pgadmin
    env:
      # can be email or nickname
      email: admin@admin.com
---
apiVersion: kinda.rocks/v1beta1
kind: DbInstance
metadata:
  name: pg-instance
  # cluster-scoped resource, no namespace
spec:
  adminSecretRef:
    Name: pg-access # reference secret created by previous command
    Namespace: dbs
  engine: "postgres"
  generic:
    host: "postgresql-postgresql-ha-pgpool.dbs.svc.cluster.local"
    port: 5432 # default postgres port
